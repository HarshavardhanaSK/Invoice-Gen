{"version":3,"sources":["Components/InvoicePreview.js","Components/Invoice.js","App.js","reportWebVitals.js","index.js"],"names":["InvoicePreview","forwardRef","props","ref","React","createElement","className","billedTo","InvNo","dateOfIssue","invoiceItems","map","item","index","key","description","amount","sgst","sgstAmount","toFixed","gst","gstAmount","quantity","total","colSpan","totalQuantity","totalAmount","Invoice","setInvoiceItems","useState","isModalOpen","setIsModalOpen","newItem","setNewItem","setBilledTo","Invno","setInvno","setDateOfIssue","componentRef","useRef","handleChange","e","[object Object]","target","name","value","calculateTotalQuantity","reduce","Number","calculateTotalAmount","type","onChange","onClick","updatedItems","filter","_","i","removeItem","ReactToPrint","trigger","content","current","style","display","placeholder","addItem","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.76c42288.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\r\n\r\nconst InvoicePreview = forwardRef((props, ref) => (\r\n    <div ref={ref} className=\"A4-size\">\r\n        <div className=\"HEad\">\r\n            <p>INVOICE</p>\r\n            <ul>\r\n                <li>PHno. 9591 3036</li>\r\n                <li>Email: COMPAny@gmail.com</li>\r\n            </ul>\r\n            <ul>\r\n                <li>#321 521 Bangalore 560047</li>\r\n            </ul>\r\n        </div>\r\n        <div className=\"SUb-head\">\r\n            <div className=\"BOx1\">\r\n                <p>Billed To</p>\r\n                <p>{props.billedTo}</p>\r\n            </div>\r\n            <div className=\"BOx2\">\r\n                <p>Invoice Number</p>\r\n                <p>{props.InvNo}</p>\r\n                <br />\r\n                <p>Date Of Issue</p>\r\n                <p>{props.dateOfIssue}</p>\r\n            </div>\r\n        </div>\r\n        <div className=\"BOdy\">\r\n            <table className=\"invoice-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Amount</th>\r\n                        <th>SGST (%)</th>\r\n                        <th>SGST Amount</th>\r\n                        <th>GST (%)</th>\r\n                        <th>GST Amount</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.invoiceItems.map((item, index) => (\r\n                        <tr key={index}>\r\n                            <td>{item.description}</td>\r\n                            <td>{item.amount}</td>\r\n                            <td>{item.sgst}</td>\r\n                            <td>{item.sgstAmount.toFixed(2)}</td>\r\n                            <td>{item.gst}</td>\r\n                            <td>{item.gstAmount.toFixed(2)}</td>\r\n                            <td>{item.quantity}</td>\r\n                            <td>{item.total.toFixed(2)}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td colSpan=\"6\">Total</td>\r\n                        <td>{props.totalQuantity}</td>\r\n                        <td>{props.totalAmount}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"footer\">\r\n            <div className=\"left-footer\">\r\n                <p>Name:</p>\r\n                <p>Signature:</p>\r\n            </div>\r\n            <div className=\"right-footer\">\r\n                <p>Total: <span className=\"total-amount\">{props.totalAmount}</span></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n));\r\n\r\nexport default InvoicePreview;\r\n","import React, { useState, useRef } from 'react';\r\nimport ReactToPrint from 'react-to-print';\r\nimport InvoicePreview from './InvoicePreview';\r\n\r\nfunction Invoice() {\r\n    const [invoiceItems, setInvoiceItems] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [newItem, setNewItem] = useState({ description: '', amount: 0, quantity: 1, sgst: 2, gst: 2 });\r\n    const [billedTo, setBilledTo] = useState('');\r\n    const [Invno, setInvno] = useState('');\r\n    const [dateOfIssue, setDateOfIssue] = useState('');\r\n    const componentRef = useRef();\r\n\r\n    const handleChange = (e) => {\r\n        setNewItem({ ...newItem, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleBilledToChange = (e) => {\r\n        setBilledTo(e.target.value);\r\n    };\r\n\r\n    const handleDateOfIssueChange = (e) => {\r\n        setDateOfIssue(e.target.value);\r\n    };\r\n\r\n    const handleInvoNO = (e) => {\r\n        setInvno(e.target.value);\r\n    };\r\n\r\n    const addItem = () => {\r\n        const sgstAmount = (newItem.amount * newItem.sgst) / 100;\r\n        const gstAmount = (newItem.amount * newItem.gst) / 100;\r\n        const totalAmount = (Number(newItem.amount) + sgstAmount + gstAmount) * Number(newItem.quantity);\r\n\r\n        setInvoiceItems([...invoiceItems, { ...newItem, sgstAmount, gstAmount, total: totalAmount }]);\r\n        setIsModalOpen(false);\r\n        setNewItem({ description: '', amount: 0, quantity: 1, sgst: 0, gst: 0 });\r\n    };\r\n\r\n    const removeItem = (index) => {\r\n        const updatedItems = invoiceItems.filter((_, i) => i !== index);\r\n        setInvoiceItems(updatedItems);\r\n    };\r\n\r\n    const calculateTotalQuantity = () => {\r\n        return invoiceItems.reduce((total, item) => total + Number(item.quantity), 0);\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n        return invoiceItems.reduce((total, item) => total + Number(item.total), 0);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"HEad\">\r\n                <p>INVOICE</p>\r\n                <ul>\r\n                    <li>PHno. 9591 3036</li>\r\n                    <li>Email: Integral@gmail.com</li>\r\n                </ul>\r\n                <ul>\r\n                    <li>#321 521 Bangalore 560047</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"SUb-head\">\r\n                <div className=\"BOx1\">\r\n                    <p>Billed To</p>\r\n                    <input type='text' value={billedTo} onChange={handleBilledToChange} />\r\n                </div>\r\n\r\n                <div className=\"BOx2\">\r\n                    <p>Invoice Number</p>\r\n                    <input type='text' value={Invno} onChange={handleInvoNO} />\r\n                    <br />\r\n                    <p>Date Of Issue</p>\r\n                    <input type='date' value={dateOfIssue} onChange={handleDateOfIssueChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"BOdy\">\r\n                <table className=\"invoice-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Amount</th>\r\n                            <th>SGST (%)</th>\r\n                            <th>SGST Amount</th>\r\n                            <th>GST (%)</th>\r\n                            <th>GST Amount</th>\r\n                            <th>Quantity</th>\r\n                            <th>Total</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {invoiceItems.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{item.description}</td>\r\n                                <td>{item.amount}</td>\r\n                                <td>{item.sgst}</td>\r\n                                <td>{item.sgstAmount.toFixed(2)}</td>\r\n                                <td>{item.gst}</td>\r\n                                <td>{item.gstAmount.toFixed(2)}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td>{item.total.toFixed(2)}</td>\r\n                                <td>\r\n                                    <button onClick={() => removeItem(index)} className=\"REmove-button\">Remove</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td colSpan=\"6\">Total</td>\r\n                            <td>{calculateTotalQuantity()}</td>\r\n                            <td>{calculateTotalAmount().toFixed(2)}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n\r\n                <div className=\"BUttons\">\r\n                    <button className=\"ADd-button\" onClick={() => setIsModalOpen(true)}>ADD ITEM</button>\r\n                    \r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"PRint-button\">PRINT INVOICE</button>}\r\n                        content={() => componentRef.current}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ display: \"none\" }}>\r\n                    <InvoicePreview \r\n                        ref={componentRef} \r\n                        invoiceItems={invoiceItems} \r\n                        billedTo={billedTo} \r\n                        InvNo={Invno} \r\n                        dateOfIssue={dateOfIssue} \r\n                        totalQuantity={calculateTotalQuantity()}\r\n                        totalAmount={calculateTotalAmount().toFixed(2)}\r\n                    />\r\n                </div>\r\n\r\n                {isModalOpen && (\r\n                    <div className=\"modal\">\r\n                        <div className=\"modal-content\">\r\n                            <h3>Add New Item</h3>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"description\"\r\n                                placeholder=\"Description\"\r\n                                value={newItem.description}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"amount\"\r\n                                placeholder=\"Amount\"\r\n                                value={newItem.amount}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"sgst\"\r\n                                placeholder=\"SGST (%)\"\r\n                                value={newItem.sgst}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"gst\"\r\n                                placeholder=\"GST (%)\"\r\n                                value={newItem.gst}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"quantity\"\r\n                                placeholder=\"Quantity\"\r\n                                value={newItem.quantity}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <button onClick={addItem}>Add</button>\r\n                            <button onClick={() => setIsModalOpen(false)}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Footer */}\r\n            <div className=\"footer\">\r\n                <div className=\"left-footer\">\r\n                    <p>Name:</p>\r\n                    <p>Signature:</p>\r\n                </div>\r\n                <div className=\"right-footer\">\r\n                    <p>Total: <span className=\"total-amount\">{calculateTotalAmount().toFixed(2)}</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Invoice;\r\n","import './App.css';\nimport React from 'react';\nimport Invoice from './Components/Invoice';\n\nfunction App() {\n  return (\n    <div>\n      <Invoice></Invoice>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}